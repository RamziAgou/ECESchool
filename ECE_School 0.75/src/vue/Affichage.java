package Vue;


import controleur.EcoleDAO;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import static java.time.Clock.system;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import modele.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author cynth
 */
public class Affichage extends JFrame{

    /**
     * Creates new form Affichage
     */
    private static Ecole ecole = new Ecole();
    public Affichage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelMenu = new javax.swing.JPanel();
        buttonEleves = new javax.swing.JButton();
        buttonEnseignants = new javax.swing.JButton();
        buttonDisciplines = new javax.swing.JButton();
        buttonClasses = new javax.swing.JButton();
        buttonNiveau = new javax.swing.JButton();
        panelDisciplines = new javax.swing.JPanel();
        accueilDisciplines = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabDisciplines = new javax.swing.JTable();
        addDiscpline = new javax.swing.JButton();
        ajoutDiscipline = new javax.swing.JTextField();
        deleteDiscipline = new javax.swing.JButton();
        panelNiveau = new javax.swing.JPanel();
        accueilNiveau = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabNiveaux = new javax.swing.JTable();
        ajoutNiveau = new javax.swing.JTextField();
        addNiveau = new javax.swing.JButton();
        deleteNiveau = new javax.swing.JButton();
        panelEleves = new javax.swing.JPanel();
        accueilEleves = new javax.swing.JPanel();
        fieldEleves = new javax.swing.JTextField();
        buttonRechercheEleve = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        buttonAjoutEleve = new javax.swing.JButton();
        scroll3 = new javax.swing.JScrollPane();
        listeEleves = new javax.swing.JTextArea();
        buttonAjoutBulletin = new javax.swing.JButton();
        reportingEleves = new javax.swing.JButton();
        ajouterEleve = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        fieldPrenomEleve = new javax.swing.JTextField();
        fieldNomEleve = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        boxClasse = new javax.swing.JComboBox<>();
        buttonValiderEleve = new javax.swing.JButton();
        ajouterBulletin = new javax.swing.JPanel();
        rechercherEleve = new javax.swing.JPanel();
        scroll4 = new javax.swing.JScrollPane();
        ficheEleve = new javax.swing.JTextArea();
        fieldNewApp = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        bulletinEleve = new javax.swing.JTable();
        button1 = new javax.swing.JButton();
        trimestre1 = new javax.swing.JButton();
        trimestre2 = new javax.swing.JButton();
        trimestre3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        detailsBulletin = new javax.swing.JButton();
        reportEleves = new javax.swing.JPanel();
        detailsBulletinEleve = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabDetailsBulletin = new javax.swing.JTable();
        newNote = new javax.swing.JTextField();
        newApp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        panelClasses = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        accueilClasses = new javax.swing.JPanel();
        buttonAjoutClasse = new javax.swing.JButton();
        ajouterClasse = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        fieldNomClasse = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        fieldAnneeScolaire = new javax.swing.JTextField();
        boxNiveau = new javax.swing.JComboBox<>();
        buttonValiderClasse = new javax.swing.JButton();
        panelEnseignants = new javax.swing.JPanel();
        accueilEnseignants = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        fieldEnseignants = new javax.swing.JTextField();
        buttonRechercheEnseignant = new javax.swing.JButton();
        buttonAjoutEnseignant = new javax.swing.JButton();
        scroll = new javax.swing.JScrollPane();
        listeEnseignants = new javax.swing.JTextArea();
        reportingProfs = new javax.swing.JButton();
        reportEnseignants = new javax.swing.JPanel();
        rechercherEnseignant = new javax.swing.JPanel();
        scroll2 = new javax.swing.JScrollPane();
        ficheEnseignant = new javax.swing.JTextArea();
        ajouterEnseignant = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        fieldPrenomEnseignant = new javax.swing.JTextField();
        fieldDisciplineEnseignant = new javax.swing.JTextField();
        fieldNomEnseignant = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        buttonValiderEnseignant = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuAccueil = new javax.swing.JMenu();
        menuEleves = new javax.swing.JMenu();
        menuEnseignants = new javax.swing.JMenu();
        menuDisciplines = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.CardLayout());

        panelMenu.setBackground(new java.awt.Color(0, 153, 153));

        buttonEleves.setBackground(new java.awt.Color(255, 51, 51));
        buttonEleves.setText("El√®ves");
        buttonEleves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonElevesActionPerformed(evt);
            }
        });

        buttonEnseignants.setBackground(new java.awt.Color(255, 51, 51));
        buttonEnseignants.setText("Enseignants");
        buttonEnseignants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnseignantsActionPerformed(evt);
            }
        });

        buttonDisciplines.setBackground(new java.awt.Color(255, 51, 51));
        buttonDisciplines.setText("Disciplines");
        buttonDisciplines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDisciplinesActionPerformed(evt);
            }
        });

        buttonClasses.setText("Classes");
        buttonClasses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClassesActionPerformed(evt);
            }
        });

        buttonNiveau.setText("Niveau");
        buttonNiveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNiveauActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMenuLayout = new javax.swing.GroupLayout(panelMenu);
        panelMenu.setLayout(panelMenuLayout);
        panelMenuLayout.setHorizontalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(buttonEleves)
                .addGap(147, 147, 147)
                .addComponent(buttonEnseignants)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 290, Short.MAX_VALUE)
                .addComponent(buttonDisciplines)
                .addGap(41, 41, 41))
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addComponent(buttonClasses)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonNiveau)
                .addGap(171, 171, 171))
        );
        panelMenuLayout.setVerticalGroup(
            panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMenuLayout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonEleves)
                    .addComponent(buttonDisciplines)
                    .addComponent(buttonEnseignants))
                .addGap(91, 91, 91)
                .addGroup(panelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonClasses)
                    .addComponent(buttonNiveau))
                .addContainerGap(749, Short.MAX_VALUE))
        );

        jPanel1.add(panelMenu, "card5");

        panelDisciplines.setBackground(new java.awt.Color(255, 51, 204));
        panelDisciplines.setLayout(new java.awt.CardLayout());

        accueilDisciplines.setBackground(new java.awt.Color(255, 51, 51));

        tabDisciplines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disciplines"
            }
        ));
        jScrollPane3.setViewportView(tabDisciplines);

        addDiscpline.setText("Ajouter");

        deleteDiscipline.setText("Supprimer");

        javax.swing.GroupLayout accueilDisciplinesLayout = new javax.swing.GroupLayout(accueilDisciplines);
        accueilDisciplines.setLayout(accueilDisciplinesLayout);
        accueilDisciplinesLayout.setHorizontalGroup(
            accueilDisciplinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accueilDisciplinesLayout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(accueilDisciplinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accueilDisciplinesLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(ajoutDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accueilDisciplinesLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(addDiscpline, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(deleteDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        accueilDisciplinesLayout.setVerticalGroup(
            accueilDisciplinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accueilDisciplinesLayout.createSequentialGroup()
                .addGroup(accueilDisciplinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(accueilDisciplinesLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, accueilDisciplinesLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(ajoutDiscipline, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(accueilDisciplinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addDiscpline)
                            .addComponent(deleteDiscipline))))
                .addContainerGap(763, Short.MAX_VALUE))
        );

        panelDisciplines.add(accueilDisciplines, "card3");

        jPanel1.add(panelDisciplines, "card5");

        panelNiveau.setLayout(new java.awt.CardLayout());

        jLabel17.setText("Voici la liste des niveaux de l'√©cole");

        tabNiveaux.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Niveaux"
            }
        ));
        jScrollPane4.setViewportView(tabNiveaux);

        ajoutNiveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajoutNiveauActionPerformed(evt);
            }
        });

        addNiveau.setText("Ajouter un niveau");

        deleteNiveau.setText("Supprimer un niveau");

        javax.swing.GroupLayout accueilNiveauLayout = new javax.swing.GroupLayout(accueilNiveau);
        accueilNiveau.setLayout(accueilNiveauLayout);
        accueilNiveauLayout.setHorizontalGroup(
            accueilNiveauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accueilNiveauLayout.createSequentialGroup()
                .addGroup(accueilNiveauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accueilNiveauLayout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(jLabel17))
                    .addGroup(accueilNiveauLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(accueilNiveauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(accueilNiveauLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(addNiveau)
                                .addGap(71, 71, 71)
                                .addComponent(deleteNiveau))
                            .addGroup(accueilNiveauLayout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(ajoutNiveau, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(240, Short.MAX_VALUE))
        );
        accueilNiveauLayout.setVerticalGroup(
            accueilNiveauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accueilNiveauLayout.createSequentialGroup()
                .addGroup(accueilNiveauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accueilNiveauLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel17)
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accueilNiveauLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(ajoutNiveau, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(accueilNiveauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addNiveau)
                            .addComponent(deleteNiveau))))
                .addContainerGap(789, Short.MAX_VALUE))
        );

        panelNiveau.add(accueilNiveau, "card3");

        jPanel1.add(panelNiveau, "card7");

        panelEleves.setBackground(new java.awt.Color(0, 255, 102));
        panelEleves.setLayout(new java.awt.CardLayout());

        accueilEleves.setBackground(new java.awt.Color(0, 255, 204));

        fieldEleves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldElevesActionPerformed(evt);
            }
        });

        buttonRechercheEleve.setText("Valider");
        buttonRechercheEleve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRechercheEleveActionPerformed(evt);
            }
        });

        jLabel1.setText("Rechercher un √©l√®ve");

        buttonAjoutEleve.setText("Ajouter un √©l√®ve");
        buttonAjoutEleve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAjoutEleveActionPerformed(evt);
            }
        });

        listeEleves.setColumns(20);
        listeEleves.setRows(5);
        scroll3.setViewportView(listeEleves);

        buttonAjoutBulletin.setText("Ajouter un bulletin");

        reportingEleves.setText("Reporting des √©l√®ves");

        javax.swing.GroupLayout accueilElevesLayout = new javax.swing.GroupLayout(accueilEleves);
        accueilEleves.setLayout(accueilElevesLayout);
        accueilElevesLayout.setHorizontalGroup(
            accueilElevesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accueilElevesLayout.createSequentialGroup()
                .addGroup(accueilElevesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accueilElevesLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jLabel1)
                        .addGap(52, 52, 52)
                        .addComponent(fieldEleves, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(buttonRechercheEleve))
                    .addGroup(accueilElevesLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(buttonAjoutEleve)
                        .addGap(73, 73, 73)
                        .addComponent(buttonAjoutBulletin)
                        .addGap(94, 94, 94)
                        .addComponent(reportingEleves, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accueilElevesLayout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(scroll3, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1920, Short.MAX_VALUE))
        );
        accueilElevesLayout.setVerticalGroup(
            accueilElevesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accueilElevesLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(accueilElevesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldEleves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRechercheEleve)
                    .addComponent(jLabel1))
                .addGap(43, 43, 43)
                .addComponent(scroll3, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(accueilElevesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAjoutEleve)
                    .addComponent(buttonAjoutBulletin)
                    .addComponent(reportingEleves))
                .addContainerGap(545, Short.MAX_VALUE))
        );

        panelEleves.add(accueilEleves, "card2");

        ajouterEleve.setBackground(new java.awt.Color(0, 153, 153));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel4.setText("Veuillez remplir les informations n√©c√©ssaires √† l'ajout d'un √©l√®ve");

        fieldPrenomEleve.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        fieldNomEleve.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel5.setText("Nom:");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel6.setText("Pr√©nom:");

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel7.setText("Classe:");

        boxClasse.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        boxClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxClasseActionPerformed(evt);
            }
        });

        buttonValiderEleve.setText("Valider");
        buttonValiderEleve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonValiderEleveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ajouterEleveLayout = new javax.swing.GroupLayout(ajouterEleve);
        ajouterEleve.setLayout(ajouterEleveLayout);
        ajouterEleveLayout.setHorizontalGroup(
            ajouterEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajouterEleveLayout.createSequentialGroup()
                .addContainerGap(1861, Short.MAX_VALUE)
                .addGroup(ajouterEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterEleveLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(184, 184, 184))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterEleveLayout.createSequentialGroup()
                        .addGroup(ajouterEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(43, 43, 43)
                        .addGroup(ajouterEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ajouterEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fieldPrenomEleve, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fieldNomEleve, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(boxClasse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(298, 298, 298))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterEleveLayout.createSequentialGroup()
                        .addComponent(buttonValiderEleve)
                        .addGap(377, 377, 377))))
        );
        ajouterEleveLayout.setVerticalGroup(
            ajouterEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajouterEleveLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(ajouterEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldNomEleve, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(ajouterEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldPrenomEleve, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(ajouterEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonValiderEleve)
                .addContainerGap(689, Short.MAX_VALUE))
        );

        panelEleves.add(ajouterEleve, "card6");

        javax.swing.GroupLayout ajouterBulletinLayout = new javax.swing.GroupLayout(ajouterBulletin);
        ajouterBulletin.setLayout(ajouterBulletinLayout);
        ajouterBulletinLayout.setHorizontalGroup(
            ajouterBulletinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2507, Short.MAX_VALUE)
        );
        ajouterBulletinLayout.setVerticalGroup(
            ajouterBulletinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1012, Short.MAX_VALUE)
        );

        panelEleves.add(ajouterBulletin, "card7");

        ficheEleve.setColumns(20);
        ficheEleve.setRows(5);
        scroll4.setViewportView(ficheEleve);

        fieldNewApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNewAppActionPerformed(evt);
            }
        });

        bulletinEleve.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disciplines", "Enseignants", "Moyennes", "Appreciations"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bulletinEleve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bulletinEleveMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bulletinEleve);

        button1.setText("Valider");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        trimestre1.setText("Trimestre 1");
        trimestre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trimestre1ActionPerformed(evt);
            }
        });

        trimestre2.setText("Trimestre 2");

        trimestre3.setText("Trimestre 3");

        jLabel12.setText("Changer l'appr√©ciation selectionn√©e");

        detailsBulletin.setText("Afficher le detail de ma matiere");

        javax.swing.GroupLayout rechercherEleveLayout = new javax.swing.GroupLayout(rechercherEleve);
        rechercherEleve.setLayout(rechercherEleveLayout);
        rechercherEleveLayout.setHorizontalGroup(
            rechercherEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rechercherEleveLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(rechercherEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rechercherEleveLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(rechercherEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rechercherEleveLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(fieldNewApp, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(rechercherEleveLayout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(button1))
                            .addGroup(rechercherEleveLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(detailsBulletin, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(rechercherEleveLayout.createSequentialGroup()
                        .addComponent(scroll4, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(trimestre1)
                        .addGap(61, 61, 61)
                        .addComponent(trimestre2)
                        .addGap(88, 88, 88)
                        .addComponent(trimestre3)))
                .addContainerGap(1614, Short.MAX_VALUE))
            .addGroup(rechercherEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rechercherEleveLayout.createSequentialGroup()
                    .addGap(618, 618, 618)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(162, 162, 162)))
        );
        rechercherEleveLayout.setVerticalGroup(
            rechercherEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rechercherEleveLayout.createSequentialGroup()
                .addGroup(rechercherEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rechercherEleveLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(scroll4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rechercherEleveLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(rechercherEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(trimestre1)
                            .addComponent(trimestre2)
                            .addComponent(trimestre3))))
                .addGroup(rechercherEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rechercherEleveLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(fieldNewApp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(button1)
                        .addGap(37, 37, 37)
                        .addComponent(detailsBulletin))
                    .addGroup(rechercherEleveLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(625, Short.MAX_VALUE))
            .addGroup(rechercherEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rechercherEleveLayout.createSequentialGroup()
                    .addGap(157, 157, 157)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(834, Short.MAX_VALUE)))
        );

        panelEleves.add(rechercherEleve, "card5");

        javax.swing.GroupLayout reportElevesLayout = new javax.swing.GroupLayout(reportEleves);
        reportEleves.setLayout(reportElevesLayout);
        reportElevesLayout.setHorizontalGroup(
            reportElevesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2507, Short.MAX_VALUE)
        );
        reportElevesLayout.setVerticalGroup(
            reportElevesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1012, Short.MAX_VALUE)
        );

        panelEleves.add(reportEleves, "card5");

        tabDetailsBulletin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Notes", "Appreciations"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabDetailsBulletin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabDetailsBulletinMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabDetailsBulletin);

        jLabel2.setText("Note");

        jLabel23.setText("Appreciation");

        add.setText("Ajouter");

        update.setText("Modifier");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("Supprimer");

        javax.swing.GroupLayout detailsBulletinEleveLayout = new javax.swing.GroupLayout(detailsBulletinEleve);
        detailsBulletinEleve.setLayout(detailsBulletinEleveLayout);
        detailsBulletinEleveLayout.setHorizontalGroup(
            detailsBulletinEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsBulletinEleveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(detailsBulletinEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsBulletinEleveLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(detailsBulletinEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(detailsBulletinEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newNote, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newApp, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(71, 71, 71))
                    .addGroup(detailsBulletinEleveLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1909, Short.MAX_VALUE)
                        .addComponent(update)
                        .addGap(18, 18, 18)
                        .addComponent(delete)
                        .addGap(27, 27, 27))))
        );
        detailsBulletinEleveLayout.setVerticalGroup(
            detailsBulletinEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(detailsBulletinEleveLayout.createSequentialGroup()
                .addGroup(detailsBulletinEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsBulletinEleveLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(detailsBulletinEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newNote, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(detailsBulletinEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newApp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(18, 18, 18)
                        .addGroup(detailsBulletinEleveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add)
                            .addComponent(delete)
                            .addComponent(update)))
                    .addGroup(detailsBulletinEleveLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(679, Short.MAX_VALUE))
        );

        panelEleves.add(detailsBulletinEleve, "card6");

        jPanel1.add(panelEleves, "card4");

        panelClasses.setLayout(new java.awt.CardLayout());

        jLabel18.setText("Voici la liste des classes");
        panelClasses.add(jLabel18, "card2");

        buttonAjoutClasse.setText("Ajouter une classe");
        buttonAjoutClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAjoutClasseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout accueilClassesLayout = new javax.swing.GroupLayout(accueilClasses);
        accueilClasses.setLayout(accueilClassesLayout);
        accueilClassesLayout.setHorizontalGroup(
            accueilClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accueilClassesLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(buttonAjoutClasse)
                .addContainerGap(640, Short.MAX_VALUE))
        );
        accueilClassesLayout.setVerticalGroup(
            accueilClassesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accueilClassesLayout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(buttonAjoutClasse)
                .addContainerGap(677, Short.MAX_VALUE))
        );

        panelClasses.add(accueilClasses, "card4");

        jLabel19.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel19.setText("Veuillez ajouter une nouvelle classe");

        jLabel20.setText("Nom:");

        jLabel21.setText("Niveau:");

        jLabel22.setText("Ann√©e scolaire:");

        boxNiveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxNiveauActionPerformed(evt);
            }
        });

        buttonValiderClasse.setText("Valider");
        buttonValiderClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonValiderClasseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ajouterClasseLayout = new javax.swing.GroupLayout(ajouterClasse);
        ajouterClasse.setLayout(ajouterClasseLayout);
        ajouterClasseLayout.setHorizontalGroup(
            ajouterClasseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajouterClasseLayout.createSequentialGroup()
                .addGroup(ajouterClasseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ajouterClasseLayout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(jLabel19))
                    .addGroup(ajouterClasseLayout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addGroup(ajouterClasseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22))
                        .addGap(42, 42, 42)
                        .addGroup(ajouterClasseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(boxNiveau, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fieldNomClasse)
                            .addComponent(fieldAnneeScolaire))))
                .addContainerGap(334, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterClasseLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonValiderClasse)
                .addGap(386, 386, 386))
        );
        ajouterClasseLayout.setVerticalGroup(
            ajouterClasseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajouterClasseLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel19)
                .addGap(26, 26, 26)
                .addGroup(ajouterClasseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldNomClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(ajouterClasseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(boxNiveau, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(ajouterClasseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldAnneeScolaire, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(32, 32, 32)
                .addComponent(buttonValiderClasse)
                .addContainerGap(758, Short.MAX_VALUE))
        );

        panelClasses.add(ajouterClasse, "card5");

        jPanel1.add(panelClasses, "card6");

        panelEnseignants.setBackground(new java.awt.Color(255, 255, 102));
        panelEnseignants.setLayout(new java.awt.CardLayout());

        accueilEnseignants.setBackground(new java.awt.Color(153, 255, 102));

        jLabel3.setText("Rechercher un enseignant");

        buttonRechercheEnseignant.setText("Valider");
        buttonRechercheEnseignant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRechercheEnseignantActionPerformed(evt);
            }
        });

        buttonAjoutEnseignant.setText("Ajouter un enseignant");
        buttonAjoutEnseignant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAjoutEnseignantActionPerformed(evt);
            }
        });

        listeEnseignants.setColumns(20);
        listeEnseignants.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        listeEnseignants.setRows(5);
        scroll.setViewportView(listeEnseignants);

        reportingProfs.setText("Reporting des enseignants");

        javax.swing.GroupLayout accueilEnseignantsLayout = new javax.swing.GroupLayout(accueilEnseignants);
        accueilEnseignants.setLayout(accueilEnseignantsLayout);
        accueilEnseignantsLayout.setHorizontalGroup(
            accueilEnseignantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accueilEnseignantsLayout.createSequentialGroup()
                .addGroup(accueilEnseignantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accueilEnseignantsLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(buttonAjoutEnseignant)
                        .addGap(61, 61, 61)
                        .addComponent(reportingProfs))
                    .addGroup(accueilEnseignantsLayout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(accueilEnseignantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(accueilEnseignantsLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(27, 27, 27)
                                .addComponent(fieldEnseignants, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(buttonRechercheEnseignant)))))
                .addContainerGap(337, Short.MAX_VALUE))
        );
        accueilEnseignantsLayout.setVerticalGroup(
            accueilEnseignantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accueilEnseignantsLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(accueilEnseignantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fieldEnseignants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRechercheEnseignant))
                .addGap(34, 34, 34)
                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(accueilEnseignantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAjoutEnseignant)
                    .addComponent(reportingProfs))
                .addContainerGap(639, Short.MAX_VALUE))
        );

        panelEnseignants.add(accueilEnseignants, "card3");

        javax.swing.GroupLayout reportEnseignantsLayout = new javax.swing.GroupLayout(reportEnseignants);
        reportEnseignants.setLayout(reportEnseignantsLayout);
        reportEnseignantsLayout.setHorizontalGroup(
            reportEnseignantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 867, Short.MAX_VALUE)
        );
        reportEnseignantsLayout.setVerticalGroup(
            reportEnseignantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1012, Short.MAX_VALUE)
        );

        panelEnseignants.add(reportEnseignants, "card2");

        ficheEnseignant.setColumns(20);
        ficheEnseignant.setRows(5);
        scroll2.setViewportView(ficheEnseignant);

        javax.swing.GroupLayout rechercherEnseignantLayout = new javax.swing.GroupLayout(rechercherEnseignant);
        rechercherEnseignant.setLayout(rechercherEnseignantLayout);
        rechercherEnseignantLayout.setHorizontalGroup(
            rechercherEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rechercherEnseignantLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(scroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );
        rechercherEnseignantLayout.setVerticalGroup(
            rechercherEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rechercherEnseignantLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(scroll2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(678, Short.MAX_VALUE))
        );

        panelEnseignants.add(rechercherEnseignant, "card5");

        ajouterEnseignant.setBackground(new java.awt.Color(0, 153, 153));

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        jLabel9.setText("Veuillez remplir les informations n√©c√©ssaires √† l'ajout d'un enseignant");

        fieldPrenomEnseignant.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        fieldDisciplineEnseignant.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        fieldNomEnseignant.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel8.setText("Nom:");

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel10.setText("Pr√©nom:");

        jLabel11.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel11.setText("Discipline:");

        buttonValiderEnseignant.setText("Valider");
        buttonValiderEnseignant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonValiderEnseignantActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ajouterEnseignantLayout = new javax.swing.GroupLayout(ajouterEnseignant);
        ajouterEnseignant.setLayout(ajouterEnseignantLayout);
        ajouterEnseignantLayout.setHorizontalGroup(
            ajouterEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajouterEnseignantLayout.createSequentialGroup()
                .addGroup(ajouterEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ajouterEnseignantLayout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addGroup(ajouterEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(22, 22, 22)
                        .addGroup(ajouterEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldPrenomEnseignant, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldDisciplineEnseignant, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldNomEnseignant, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ajouterEnseignantLayout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(buttonValiderEnseignant))
                    .addGroup(ajouterEnseignantLayout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        ajouterEnseignantLayout.setVerticalGroup(
            ajouterEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajouterEnseignantLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ajouterEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldNomEnseignant, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(22, 22, 22)
                .addGroup(ajouterEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldPrenomEnseignant, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(ajouterEnseignantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldDisciplineEnseignant, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addComponent(buttonValiderEnseignant)
                .addContainerGap(705, Short.MAX_VALUE))
        );

        panelEnseignants.add(ajouterEnseignant, "card4");

        jPanel1.add(panelEnseignants, "card3");

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenuBar1.setBackground(new java.awt.Color(255, 51, 51));
        jMenuBar1.setForeground(new java.awt.Color(255, 51, 51));

        menuAccueil.setText("Accueil");
        menuAccueil.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuAccueilMenuSelected(evt);
            }
        });
        jMenuBar1.add(menuAccueil);

        menuEleves.setText("El√®ves");
        menuEleves.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuElevesMenuSelected(evt);
            }
        });
        jMenuBar1.add(menuEleves);

        menuEnseignants.setText("Enseignants");
        menuEnseignants.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuEnseignantsMenuSelected(evt);
            }
        });
        jMenuBar1.add(menuEnseignants);

        menuDisciplines.setText("Disciplines");
        menuDisciplines.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuDisciplinesMenuSelected(evt);
            }
        });
        jMenuBar1.add(menuDisciplines);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonElevesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonElevesActionPerformed
        jPanel1.removeAll();
        panelEleves.removeAll();
        listeEleves.setText("");
        listeEleves.setBorder(null);
        listeEleves.setBackground(new Color(0,0,0,0));
        listeEleves.setEditable(false);
        scroll3.setOpaque(false);
        scroll3.getViewport().setOpaque(false);
        scroll3.setBorder(null);
        scroll3.setViewportBorder(null);
        ArrayList <JButton> boutonSupp = new ArrayList<>() ;
        ArrayList <JButton> boutonPhoto = new ArrayList<>() ;
        int y = 0;
       
        for(int i = 0; i<ecole.getClasses().size(); i++){
            
            Classe c = ecole.getClasses().get(i);
            String classe = c.getNom();
            for(int j=0; j<c.getEleves().size(); j++){
                String ancienneListe = listeEleves.getText();
                String nomEleve = c.getEleves().get(j).getNom();
                String prenomEleve = c.getEleves().get(j).getPrenom();
                
                System.out.println("Nom :"+nomEleve+" Prenom : "+prenomEleve);
                System.out.println("La position du bouton est : "+(100+y));
                
                listeEleves.setText(ancienneListe+"L'√©l√®ve "+nomEleve+" "+prenomEleve+" est en "+classe);
                boutonSupp.add(new JButton("Supprimer"));
                boutonSupp.get(j).setBounds(800, 100+y, 90, 20);
                boutonPhoto.add(new JButton(new ImageIcon("photo.jpg")));
                boutonPhoto.get(j).setBounds(100, 100+y, 20, 20);
                boutonSupp.get(j).addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    JButton source = (JButton) evt.getSource();
                    int posYBouton = (int) source.getLocation().getY();
                    int posXBouton = (int) source.getLocation().getX();
                    System.out.println(posYBouton);
                    System.out.println(posXBouton);
                    int numBouton = ((posYBouton - 100)/30); //premiere position a y = 100 et decalage de 30
                    System.out.println(numBouton);
                    if(posXBouton == 800){//position des boutons supprim√©s
                        buttonSuppEleveActionPerformed(evt, numBouton);
                    }
                }
            });
            boutonPhoto.get(j).addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                JButton source = (JButton) evt.getSource();
                int posYBouton = (int) source.getLocation().getY();
                int posXBouton = (int) source.getLocation().getX();
                System.out.println(posYBouton);
                System.out.println(posXBouton);
                int numBouton = ((posYBouton - 100)/30); //premiere position a y = 100 et decalage de 30
                System.out.println(numBouton);
                if(posXBouton == 100){//position des photos de profil
                    buttonFicheEleveActionPerformed(evt, numBouton);
                }
   
            }
        });
            accueilEleves.add(boutonSupp.get(j));
            accueilEleves.add(boutonPhoto.get(j));
            
            listeEleves.append("\n\n");
            accueilEleves.repaint();
            accueilEleves.revalidate();
            y+=30;
        }
    }
        panelEleves.add(accueilEleves);
        panelEleves.repaint();
        panelEleves.revalidate();
        jPanel1.add(panelEleves);
        jPanel1.repaint();
        jPanel1.revalidate(); 
    }//GEN-LAST:event_buttonElevesActionPerformed
    private void buttonSuppEleveActionPerformed(ActionEvent evt, int numBouton){
        System.out.println("Bouton supp"+numBouton);
    }

    private void buttonFicheEleveActionPerformed(ActionEvent evt, int numBouton){
        System.out.println("Bouton fiche"+numBouton);
        if(!"".equals(ecole.getEleves().size())){
            int Id = ecole.getEleves().get(numBouton).getId();
            System.out.println("nom eleverechercher: "+Id);
            rechercherEleve(Id);
        }
        
       
    }
    private void buttonEnseignantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnseignantsActionPerformed
        jPanel1.removeAll();
        listeEnseignants.setText("");
        panelEnseignants.removeAll();
        listeEnseignants.setBorder(null);
        listeEnseignants.setBackground(new Color(0,0,0,0));
        listeEnseignants.setEditable(false);
        scroll.setOpaque(false);
        scroll.getViewport().setOpaque(false);
        scroll.setBorder(null);
        scroll.setViewportBorder(null);
        ArrayList <JButton> boutonSupp = new ArrayList<>() ;
        ArrayList <JButton> boutonPhoto = new ArrayList<>() ;
        int y = 0;
       
        for(int i = 0; i<ecole.getProfs().size(); i++){
            String ancienneListe = listeEnseignants.getText();
            String nomProf = ecole.getProfs().get(i).getNom();
            String prenomProf = ecole.getProfs().get(i).getPrenom();
            String discipline = ecole.getProfs().get(i).getDiscipline();          
            listeEnseignants.setText(ancienneListe+"Le professeur "+nomProf+" "+prenomProf+" a pour discipline "+discipline+".");
            boutonSupp.add(new JButton("Supprimer"));
            boutonSupp.get(i).setBounds(800, 100+y, 90, 20);
            boutonPhoto.add(new JButton(new ImageIcon("photo.jpg")));
            boutonPhoto.get(i).setBounds(100, 100+y, 20, 20);
            boutonSupp.get(i).addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                JButton source = (JButton) evt.getSource();
                int posYBouton = (int) source.getLocation().getY();
                int posXBouton = (int) source.getLocation().getX();
                System.out.println(posYBouton);
                System.out.println(posXBouton);
                int numBouton = ((posYBouton - 100)/30); //premiere position a y = 100 et decalage de 30
                System.out.println(numBouton);
                if(posXBouton == 800){//position des boutons supprim√©s
                    buttonSuppEnseignantActionPerformed(evt, numBouton);
                }
            }
        });
            boutonPhoto.get(i).addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                JButton source = (JButton) evt.getSource();
                int posYBouton = (int) source.getLocation().getY();
                int posXBouton = (int) source.getLocation().getX();
                System.out.println(posYBouton);
                System.out.println(posXBouton);
                int numBouton = ((posYBouton - 100)/30); //premiere position a y = 100 et decalage de 30
                System.out.println(numBouton);
                if(posXBouton == 100){//position des photos de profil
                    buttonFicheEnseignantActionPerformed(evt, numBouton);
                }
   
            }
        });
            accueilEnseignants.add(boutonSupp.get(i));
            accueilEnseignants.add(boutonPhoto.get(i));
            listeEnseignants.append("\n\n");
            accueilEnseignants.repaint();
            accueilEnseignants.revalidate();
            y+=30;
        }
        panelEnseignants.add(accueilEnseignants);
        panelEnseignants.repaint();
        panelEnseignants.revalidate();
        jPanel1.add(panelEnseignants);
        jPanel1.repaint();
        jPanel1.revalidate();         // TODO add your handling code here:
    }//GEN-LAST:event_buttonEnseignantsActionPerformed

    private void buttonSuppEnseignantActionPerformed(ActionEvent evt, int numBouton){
        System.out.println("Bouton supp"+numBouton);
    }

    private void buttonFicheEnseignantActionPerformed(ActionEvent evt, int numBouton){
        System.out.println("Bouton fiche"+numBouton);
        if(!"".equals(ecole.getProfs().size())){
            String nomProfR = ecole.getProfs().get(numBouton).getNom();
            System.out.println("nom enseignant recherche: "+nomProfR);
            rechercherEnseignant(nomProfR);
        }
    }
    private void buttonDisciplinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDisciplinesActionPerformed
        jPanel1.removeAll();
        panelDisciplines.removeAll();
        panelDisciplines.add(accueilDisciplines);
        panelDisciplines.repaint();
        panelDisciplines.revalidate();
        jPanel1.add(panelDisciplines);
        jPanel1.repaint();
        jPanel1.revalidate(); 
        DefaultTableModel model = (DefaultTableModel)tabDisciplines.getModel();
        for(int t = 0; t<tabDisciplines.getRowCount(); t++){
                model.removeRow(t);
                t--;
            } 
        for(int i = 0; i<ecole.getDisciplines().size(); i++){
            System.out.println(ecole.getDisciplines().get(i));
                                      
            model.addRow(new String[]{ecole.getDisciplines().get(i)}); 
        }                                                               
        
        Object[] row = new Object[1];
            addDiscpline.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e){
                    if(!"".equals(ajoutDiscipline.getText())){
                        row[0] = ajoutDiscipline.getText();
                    model.addRow(row);
                    ajoutDiscipline.setText("");
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"Notez le nom de la discipline" );
                    }
                }
            });

            deleteDiscipline.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e){
                    int i = tabDisciplines.getSelectedRow();
                    if(i >= 0){
                        model.removeRow(i);                                                           
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"Selectionnez la discipline" );
                    }
                }
            });
    }//GEN-LAST:event_buttonDisciplinesActionPerformed

    private void menuEnseignantsMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuEnseignantsMenuSelected
        jPanel1.removeAll();
        jPanel1.add(panelEnseignants);
        jPanel1.repaint();
        jPanel1.revalidate();
    }//GEN-LAST:event_menuEnseignantsMenuSelected

    private void menuElevesMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuElevesMenuSelected
        jPanel1.removeAll();
        panelEleves.removeAll();
        panelEleves.add(accueilEleves);
        panelEleves.repaint();
        panelEleves.revalidate();
        jPanel1.add(panelEleves);
        jPanel1.repaint();
        jPanel1.revalidate();
    }//GEN-LAST:event_menuElevesMenuSelected

    private void menuAccueilMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuAccueilMenuSelected
        jPanel1.removeAll();
        panelEnseignants.removeAll();
        panelEnseignants.add(accueilEnseignants);
        panelEnseignants.repaint();
        panelEnseignants.revalidate();
        jPanel1.add(panelMenu);
        jPanel1.repaint();
        jPanel1.revalidate();
    }//GEN-LAST:event_menuAccueilMenuSelected

    private void menuDisciplinesMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuDisciplinesMenuSelected
        jPanel1.removeAll();
        panelDisciplines.removeAll();
        panelDisciplines.add(accueilDisciplines);
        panelDisciplines.repaint();
        panelDisciplines.revalidate();
        jPanel1.add(panelDisciplines);
        jPanel1.repaint();
        jPanel1.revalidate();
    }//GEN-LAST:event_menuDisciplinesMenuSelected

    private void buttonRechercheEleveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRechercheEleveActionPerformed
        String nomEleve;
        int id = 0;
        nomEleve = fieldEleves.getText();
        for(int i = 0; i<ecole.getEleves().size(); i++){
            if(ecole.getEleves().get(i).getNom().equals(nomEleve)){
                id = ecole.getEleves().get(i).getId();
            }
        }
        System.out.println("Nom de l'√©l√®ve recherche: "+nomEleve);
        rechercherEleve(id);
    }//GEN-LAST:event_buttonRechercheEleveActionPerformed

    private void afficherBulletinN(int b, int id, Eleve eleve){
        boolean success = false;
        
        for(int i = 0; i<ecole.getClasses().size(); i++){
            Classe c = ecole.getClasses().get(i);
            for(int j=0; j<c.getEleves().size(); j++)
            {
                int idEleve = c.getEleves().get(j).getId();
                String nomEleve = c.getEleves().get(j).getNom();
                String prenomEleve = c.getEleves().get(j).getPrenom();
                System.out.println("nom de l'eleve: "+nomEleve);
                if(idEleve == id){
                    success = true;
                    Eleve e = c.getEleves().get(j);
                    e.afficherBulletin();
                    for(int k=0; k<e.getBulletin().size(); k++){
                        Bulletin bu = e.getBulletin().get(k);
                        if(bu.getNumero()==b){
                            eleve.setId(bu.getId());
                            DefaultTableModel model = (DefaultTableModel)bulletinEleve.getModel();
                            for(int t = 0; t<bulletinEleve.getRowCount(); t++){
                                model.removeRow(t);
                                t--;
                            }                           
                            for(int l = 0; l<bu.getDetails().size(); l++){
                                double moyenne = bu.getDetails().get(l).moyenneEval();
                                
                                model.addRow(new String[]{bu.getDetails().get(l).getDiscipline(),
                                bu.getDetails().get(l).getProf(),
                                Double.toString(moyenne),
                                bu.getDetails().get(l).getAppreciation()
                                });                                                                
                            }
                        }
                    }
                }
                
            }
        }
    }
    
    private void detailsBulletinN(int b, int id, String discipline){
        jPanel1.removeAll();
        panelEleves.removeAll();
        panelEleves.add(detailsBulletinEleve);
        for(int i = 0; i<ecole.getClasses().size(); i++){
            Classe c = ecole.getClasses().get(i);
            for(int j=0; j<c.getEleves().size(); j++)
            {
                int idEleve = c.getEleves().get(j).getId();
                if(idEleve == id){
                    Eleve e = c.getEleves().get(j);
                    e.afficherBulletin();
                    for(int k=0; k<e.getBulletin().size(); k++){
                        Bulletin bu = e.getBulletin().get(k);
                        if(bu.getId() == b){
                            for(int l = 0; l<bu.getDetails().size(); l++){
                                String matiere = bu.getDetails().get(l).getDiscipline();
                                if(matiere.equals(discipline)){
                                    for(int m = 0; m<bu.getDetails().get(l).getEvals().size(); m++){
                                        float note = bu.getDetails().get(l).getEvals().get(m).getNote();
                                        String appreciation = bu.getDetails().get(l).getEvals().get(m).getAppreciation();
                                        DefaultTableModel model = (DefaultTableModel)tabDetailsBulletin.getModel();
                                        model.addRow(new String[]{Float.toString(note),appreciation});
                                        
                                        Object[] row = new Object[2];
                                        add.addActionListener(new ActionListener(){
                                            @Override
                                            public void actionPerformed(ActionEvent e){
                                                row[0] = newNote.getText();
                                                row[1] = newApp.getText();
                                                model.addRow(row);
                                                newNote.setText("");
                                                newApp.setText("");
                                            }
                                        });
                                        
                                        delete.addActionListener(new ActionListener(){
                                            @Override
                                            public void actionPerformed(ActionEvent e){
                                                int i = tabDetailsBulletin.getSelectedRow();
                                                if(i >= 0){
                                                    model.removeRow(i);                                                           
                                                }
                                                else{
                                                    JOptionPane.showMessageDialog(null,"Selectionnez une note" );
                                                }
                                            }
                                        });
                                    }
                                }                               
                            }
                            
                        }
                    }
                }
            }
        } 
        panelEleves.repaint();
        panelEleves.revalidate();
        jPanel1.add(panelEleves);
        jPanel1.repaint();
        jPanel1.revalidate();
        
    }
    
    private void rechercherEleve(int id){
        boolean trouve = false;
        int k = 0;
        Eleve eleve = new Eleve();
        panelEleves.removeAll();
        ficheEleve.setBorder(null);
        ficheEleve.setBackground(new Color(0,0,0,0));
        ficheEleve.setEditable(false);
        scroll4.setOpaque(false);
        scroll4.getViewport().setOpaque(false);
        scroll4.setBorder(null);
        scroll4.setViewportBorder(null);
        for(int i = 0; i<ecole.getClasses().size(); i++){
            Classe c = ecole.getClasses().get(i);
            for(int j=0; j<c.getEleves().size(); j++)
            {
                int idEleve = c.getEleves().get(j).getId();
                String nomEleve = c.getEleves().get(j).getNom();
                String prenomEleve = c.getEleves().get(j).getPrenom();
                System.out.println("nom de l'eleve: "+nomEleve);
                if(idEleve == id){
                    c.getEleves().get(j).afficherBulletin();
                    ficheEleve.setText("L'√©l√®ve "+nomEleve+" "+prenomEleve+" a pour discipline.");
                    System.out.println("taille: "+c.getEleves().get(j).getBulletin().size()); 
                    JOptionPane.showMessageDialog(null, "Selectionnez un trimestre !");
                    trimestre1.addActionListener(new ActionListener(){
                            public void actionPerformed (ActionEvent e){
                                afficherBulletinN(1, id, eleve);
                            }
                        });
                    trimestre2.addActionListener(new ActionListener(){
                            public void actionPerformed (ActionEvent e){
                                afficherBulletinN(2, id, eleve);
                            }
                        });
                    trimestre3.addActionListener(new ActionListener(){
                            public void actionPerformed (ActionEvent e){
                                afficherBulletinN(3, id, eleve);
                            }
                        });
                    trouve = true;
                }
            } 
        }
        if(trouve == false){
            ficheEleve.setText("L'√©l√®ve n'a pas √©t√© trouv√©");
            JOptionPane.showMessageDialog(null, "L'√©l√®ve n'a pas √©t√© trouv√©");
        }
        DefaultTableModel model = (DefaultTableModel)bulletinEleve.getModel();
        detailsBulletin.addActionListener(new ActionListener(){
        public void actionPerformed (ActionEvent e){
            int o = bulletinEleve.getSelectedRow();
            
            System.out.println(o);
            if(o >= 0){
                String discipline = model.getValueAt(o,0).toString();
                detailsBulletinN(eleve.getId(), id, discipline);//num bulletin, id eleve, matiere
            }
            else{
                JOptionPane.showMessageDialog(null, "Selectionnez une mati√®re pour voir le detail !");
            }
            
        }
        });
        
        panelEleves.add(rechercherEleve);
        panelEleves.repaint();
        panelEleves.revalidate();
        jPanel1.add(panelEleves);
        jPanel1.repaint();
        jPanel1.revalidate();
    }
    private void rechercherEnseignant(String nomEnseignant){
        boolean trouve = false;
        panelEnseignants.removeAll();
        ficheEnseignant.setBorder(null);
        ficheEnseignant.setBackground(new Color(0,0,0,0));
        ficheEnseignant.setEditable(false);
        scroll2.setOpaque(false);
        scroll2.getViewport().setOpaque(false);
        scroll2.setBorder(null);
        scroll2.setViewportBorder(null);
        for(int i = 0; i<ecole.getProfs().size(); i++){
            String nomProf = ecole.getProfs().get(i).getNom();
            String prenomProf = ecole.getProfs().get(i).getPrenom();
            String discipline = ecole.getProfs().get(i).getDiscipline();      
            
            System.out.println(nomProf);
            if(nomProf.equals(nomEnseignant) || prenomProf.equals(nomEnseignant)){
                ficheEnseignant.setText("Le professeur "+nomProf+" "+prenomProf+" a pour discipline "+discipline+".");
                trouve = true;
            }          
        }
        if(trouve == false){
            ficheEnseignant.setText("Le professeur n'a pas √©t√© trouv√©");
                System.out.println("Prof non trouv√©");
        }
        panelEnseignants.add(rechercherEnseignant);
        panelEnseignants.repaint();
        panelEnseignants.revalidate();
        jPanel1.add(panelEnseignants);
        jPanel1.repaint();
        jPanel1.revalidate();        
    }
    private void buttonRechercheEnseignantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRechercheEnseignantActionPerformed
        String nomEnseignant;
        boolean trouve = false;
        nomEnseignant = fieldEnseignants.getText();
        fieldEnseignants.setText("");
        System.out.println("Nom de l'enseignant recherche: "+nomEnseignant);

    }//GEN-LAST:event_buttonRechercheEnseignantActionPerformed

    private void buttonAjoutEleveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAjoutEleveActionPerformed
        panelEleves.removeAll();
        panelEleves.add(ajouterEleve);
        panelEleves.repaint();
        panelEleves.revalidate();
        boxClasse.addItem("Selectionner la classe");
        for(int i = 0; i<ecole.getClasses().size(); i++){
            String c = ecole.getClasses().get(i).getNom();
            boxClasse.addItem(c);
        }   
    }//GEN-LAST:event_buttonAjoutEleveActionPerformed

    private void buttonAjoutEnseignantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAjoutEnseignantActionPerformed
        panelEnseignants.removeAll();
        panelEnseignants.add(ajouterEnseignant);
        panelEnseignants.repaint();
        panelEnseignants.revalidate();
    }//GEN-LAST:event_buttonAjoutEnseignantActionPerformed

    private void boxClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxClasseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxClasseActionPerformed

    private void buttonValiderEleveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonValiderEleveActionPerformed
        String nomEleve, prenomEleve, classeEleve;
        nomEleve = fieldNomEleve.getText();
        prenomEleve = fieldPrenomEleve.getText();
        classeEleve = boxClasse.getSelectedItem().toString();
        if(!"".equals(nomEleve)&& !"".equals(prenomEleve) && !"Selectionner la classe".equals(classeEleve)){
            System.out.println(nomEleve+prenomEleve+classeEleve);
            fieldNomEleve.setText("");
            fieldPrenomEleve.setText("");
            boxClasse.setSelectedItem("Selectionner la classe");
            System.out.println(nomEleve+prenomEleve+classeEleve);
        }
        else{
            //JOptionPane.showMessageDialog(this,"Erreur",JOptionPane.ERROR_MESSAGE);
            System.out.println("Veuillez remplir tous les champs !");
        }
           
        
    }//GEN-LAST:event_buttonValiderEleveActionPerformed

    private void buttonValiderEnseignantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonValiderEnseignantActionPerformed
        String nomEnseignant, prenomEnseignant, disciplineEnseignant;
        nomEnseignant = fieldNomEnseignant.getText();
        prenomEnseignant = fieldPrenomEnseignant.getText();
        disciplineEnseignant= fieldDisciplineEnseignant.getText();
        if(!"".equals(nomEnseignant) && !"".equals(prenomEnseignant) && !"".equals(disciplineEnseignant)){
            System.out.println("nom: "+nomEnseignant+" prenom: "+prenomEnseignant);
            fieldNomEnseignant.setText("");
            fieldPrenomEnseignant.setText("");
            fieldDisciplineEnseignant.setText("");
        }
        else{
            //JOptionPane.showMessageDialog(this,"Erreur",JOptionPane.ERROR_MESSAGE);
            System.out.println("Veuillez remplir tous les champs !");
        }       // TODO add your handling code here:
    }//GEN-LAST:event_buttonValiderEnseignantActionPerformed

    private void buttonNiveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNiveauActionPerformed
        jPanel1.removeAll();
        panelNiveau.removeAll();
        panelNiveau.add(accueilNiveau);
        panelNiveau.repaint();
        panelNiveau.revalidate();
        jPanel1.add(panelNiveau);
        jPanel1.repaint();
        jPanel1.revalidate();
        DefaultTableModel model = (DefaultTableModel)tabNiveaux.getModel();
        for(int t = 0; t<tabNiveaux.getRowCount(); t++){
                model.removeRow(t);
                t--;
            } 
        for(int i = 0; i<ecole.getNiveau().size(); i++){
            System.out.println(ecole.getNiveau().get(i));
                                      
            model.addRow(new String[]{ecole.getNiveau().get(i)}); 
        }                                                               
        
        Object[] row = new Object[1];
            addNiveau.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e){
                    if(!"".equals(ajoutNiveau.getText())){
                        String niveau = ajoutNiveau.getText();
                        row[0] = niveau;
                    model.addRow(row);
                    ajoutNiveau.setText("");
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"Notez le nom du niveau" );
                    }
                }
            });

            deleteNiveau.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e){
                    int i = tabNiveaux.getSelectedRow();
                    if(i >= 0){
                        String niveau = model.getValueAt(i, 0).toString();
                        //Supprimer de la BDD
                        model.removeRow(i);
                        
                        try {
                            EcoleDAO ecoleDao = new EcoleDAO();
                            ecole = ecoleDao.init();
                        } catch (SQLException ex) {
                            System.out.println(ex.getMessage());
                        }
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"Selectionnez le niveau" );
                    }
                }
            });
    }//GEN-LAST:event_buttonNiveauActionPerformed

    private void buttonClassesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClassesActionPerformed
        jPanel1.removeAll();
        panelClasses.removeAll();
        panelClasses.add(accueilClasses);
        panelClasses.repaint();
        panelClasses.revalidate();
        jPanel1.add(panelClasses);
        jPanel1.repaint();
        jPanel1.revalidate();
    }//GEN-LAST:event_buttonClassesActionPerformed

    private void buttonAjoutClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAjoutClasseActionPerformed
        panelClasses.removeAll();
        panelClasses.add(ajouterClasse);
        panelClasses.repaint();
        panelClasses.revalidate();
        boxNiveau.addItem("Selectionner le niveau");
        for(int i = 0; i<ecole.getClasses().size(); i++){
            String c = ecole.getClasses().get(i).getNom();//√† changer avec le nom du niveau
            boxNiveau.addItem(c);
        }
    }//GEN-LAST:event_buttonAjoutClasseActionPerformed

    private void buttonValiderClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonValiderClasseActionPerformed
        String nomClasse, nomNiveau, anneeScolaire;
        nomClasse = fieldNomClasse.getText();
        anneeScolaire = fieldAnneeScolaire.getText();
        nomNiveau = boxNiveau.getSelectedItem().toString();
        if(!"".equals(nomClasse)&& !"".equals(anneeScolaire) && !"Selectionner le niveau".equals(nomNiveau)){
            System.out.println(nomClasse+nomNiveau+anneeScolaire);
            fieldNomClasse.setText("");
            fieldAnneeScolaire.setText("");
            boxNiveau.setSelectedItem("Selectionner le niveau");
        }
        else{
            //JOptionPane.showMessageDialog(this,"Erreur",JOptionPane.ERROR_MESSAGE);
            System.out.println("Veuillez remplir tous les champs !");
        }


    }//GEN-LAST:event_buttonValiderClasseActionPerformed

    private void boxNiveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxNiveauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxNiveauActionPerformed

    private void fieldElevesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldElevesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldElevesActionPerformed

    private void trimestre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trimestre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trimestre1ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        int i = bulletinEleve.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)bulletinEleve.getModel();
        if(i>=0){
            model.setValueAt(fieldNewApp.getText(), i,3);
        }
        else{
            JOptionPane.showMessageDialog(null, "Selectionnez l'appreciation √† modifier!");
        }
    }//GEN-LAST:event_button1ActionPerformed

    private void fieldNewAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNewAppActionPerformed
         
    }//GEN-LAST:event_fieldNewAppActionPerformed

    private void tabDetailsBulletinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabDetailsBulletinMouseClicked
       DefaultTableModel model = (DefaultTableModel)tabDetailsBulletin.getModel();
       int i=tabDetailsBulletin.getSelectedRow();
       newNote.setText(model.getValueAt(i,0).toString());
       newApp.setText(model.getValueAt(i,1).toString());
    }//GEN-LAST:event_tabDetailsBulletinMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        int i = tabDetailsBulletin.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tabDetailsBulletin.getModel();
        if(i>=0){
            model.setValueAt(newNote.getText(), i,0);
            model.setValueAt(newApp.getText(), i,1);
        }
        else{
            JOptionPane.showMessageDialog(null, "Selectionnez une note √† modifier !");
        }
    }//GEN-LAST:event_updateActionPerformed

    private void bulletinEleveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bulletinEleveMouseClicked
        DefaultTableModel model = (DefaultTableModel)bulletinEleve.getModel();
        int m = bulletinEleve.getSelectedRow();
        fieldNewApp.setText(model.getValueAt(m,3).toString());

    }//GEN-LAST:event_bulletinEleveMouseClicked

    private void ajoutNiveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajoutNiveauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ajoutNiveauActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try{
            EcoleDAO ecoleDao = new EcoleDAO();
            ecole = ecoleDao.init();
        //    Ecole e = ecoleDao.find(1);
        }catch(SQLException e){
            System.out.println(e.getMessage());
        }
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Affichage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Affichage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Affichage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Affichage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Affichage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accueilClasses;
    private javax.swing.JPanel accueilDisciplines;
    private javax.swing.JPanel accueilEleves;
    private javax.swing.JPanel accueilEnseignants;
    private javax.swing.JPanel accueilNiveau;
    private javax.swing.JButton add;
    private javax.swing.JButton addDiscpline;
    private javax.swing.JButton addNiveau;
    private javax.swing.JTextField ajoutDiscipline;
    private javax.swing.JTextField ajoutNiveau;
    private javax.swing.JPanel ajouterBulletin;
    private javax.swing.JPanel ajouterClasse;
    private javax.swing.JPanel ajouterEleve;
    private javax.swing.JPanel ajouterEnseignant;
    private javax.swing.JComboBox<String> boxClasse;
    private javax.swing.JComboBox<String> boxNiveau;
    private javax.swing.JTable bulletinEleve;
    private javax.swing.JButton button1;
    private javax.swing.JButton buttonAjoutBulletin;
    private javax.swing.JButton buttonAjoutClasse;
    private javax.swing.JButton buttonAjoutEleve;
    private javax.swing.JButton buttonAjoutEnseignant;
    private javax.swing.JButton buttonClasses;
    private javax.swing.JButton buttonDisciplines;
    private javax.swing.JButton buttonEleves;
    private javax.swing.JButton buttonEnseignants;
    private javax.swing.JButton buttonNiveau;
    private javax.swing.JButton buttonRechercheEleve;
    private javax.swing.JButton buttonRechercheEnseignant;
    private javax.swing.JButton buttonValiderClasse;
    private javax.swing.JButton buttonValiderEleve;
    private javax.swing.JButton buttonValiderEnseignant;
    private javax.swing.JButton delete;
    private javax.swing.JButton deleteDiscipline;
    private javax.swing.JButton deleteNiveau;
    private javax.swing.JButton detailsBulletin;
    private javax.swing.JPanel detailsBulletinEleve;
    private javax.swing.JTextArea ficheEleve;
    private javax.swing.JTextArea ficheEnseignant;
    private javax.swing.JTextField fieldAnneeScolaire;
    private javax.swing.JTextField fieldDisciplineEnseignant;
    private javax.swing.JTextField fieldEleves;
    private javax.swing.JTextField fieldEnseignants;
    private javax.swing.JTextField fieldNewApp;
    private javax.swing.JTextField fieldNomClasse;
    private javax.swing.JTextField fieldNomEleve;
    private javax.swing.JTextField fieldNomEnseignant;
    private javax.swing.JTextField fieldPrenomEleve;
    private javax.swing.JTextField fieldPrenomEnseignant;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea listeEleves;
    private javax.swing.JTextArea listeEnseignants;
    private javax.swing.JMenu menuAccueil;
    private javax.swing.JMenu menuDisciplines;
    private javax.swing.JMenu menuEleves;
    private javax.swing.JMenu menuEnseignants;
    private javax.swing.JTextField newApp;
    private javax.swing.JTextField newNote;
    private javax.swing.JPanel panelClasses;
    private javax.swing.JPanel panelDisciplines;
    private javax.swing.JPanel panelEleves;
    private javax.swing.JPanel panelEnseignants;
    private javax.swing.JPanel panelMenu;
    private javax.swing.JPanel panelNiveau;
    private javax.swing.JPanel rechercherEleve;
    private javax.swing.JPanel rechercherEnseignant;
    private javax.swing.JPanel reportEleves;
    private javax.swing.JPanel reportEnseignants;
    private javax.swing.JButton reportingEleves;
    private javax.swing.JButton reportingProfs;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JScrollPane scroll2;
    private javax.swing.JScrollPane scroll3;
    private javax.swing.JScrollPane scroll4;
    private javax.swing.JTable tabDetailsBulletin;
    private javax.swing.JTable tabDisciplines;
    private javax.swing.JTable tabNiveaux;
    private javax.swing.JButton trimestre1;
    private javax.swing.JButton trimestre2;
    private javax.swing.JButton trimestre3;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
